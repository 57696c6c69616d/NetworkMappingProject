{% extends "layout.html.twig" %}

{% block title %}Graph{% endblock %}

{% block content %}

<!-- Affiche Adresse IP -->
<div align = "center"> 
	Votre IP locale est {{localIP}}.
</div>

<div align="center">
<svg width="960" height="600"></svg>
<script type="text/javascript">

var svg = d3.select("svg"),
    width = +svg.attr("width"),
    height = +svg.attr("height");

var color = d3.scaleOrdinal(d3.schemeCategory20);

var simulation = d3.forceSimulation()
    .force("link", d3.forceLink().id(function(d) { return d.ip; }))
    .force("charge", d3.forceManyBody())
    .force("center", d3.forceCenter(width / 2, height / 2));

d3.json("../cap/cap.json", function(error, graph) {
  if (error) throw error;

  var link = svg.append("g")
      .attr("class", "links")
    .selectAll("line")
    .data(graph.links)
    .enter().append("line")
      .attr("stroke-width", function(d) { return Math.log(d.value)+1; })
      .attr("stroke", function(d) { return color(d.value); });

  var node = svg.append("g")
      .attr("class", "nodes")
    .data(graph.nodes)
      .call(d3.drag()
          .on("start", dragstarted)
          .on("drag", dragged)
          .on("end", dragended));

  svg.selectAll("image")
    .data(graph.nodes)
    .enter()
    .append("image")
  	  .attr("xlink:href", "{{ asset('/images/Computer-Icon.png') }}")
  	  .attr("x", -8)
      .attr("y", -8)
      .attr("height", 20)
      .attr("width", 20)
    .call(d3.drag()
          .on("start", dragstarted)
          .on("drag", dragged)
          .on("end", dragended));

  svg.selectAll("text")
    .data(graph.nodes)
    .enter()
    .append("text")
    .text(function(d) { return d.ip; })
    .attr("x", function(d) { return d.x; })
    .attr("y", function(d) { return d.y; });

  simulation
      .nodes(graph.nodes)
      .on("tick", ticked);

  simulation.force("link")
      .links(graph.links)
      .distance(function(d) {return 20;}).strength(0.01);

  function ticked() {
    link
        .attr("x1", function(d) { return d.source.x+10; })
        .attr("y1", function(d) { return d.source.y+10; })
        .attr("x2", function(d) { return d.target.x+10; })
        .attr("y2", function(d) { return d.target.y+10; });

    node
        .attr("cx", function(d) { return d.x; })
        .attr("cy", function(d) { return d.y; });

    svg.selectAll("image")
        .attr("x", function(d) { return d.x; })
        .attr("y", function(d) { return d.y; });

    svg.selectAll("text")
        .attr("x", function(d) { return d.x-20; })
        .attr("y", function(d) { return d.y+25; });
  }
});

function dragstarted(d) {
  if (!d3.event.active) simulation.alphaTarget(0.3).restart();
  d.fx = d.x;
  d.fy = d.y;
}

function dragged(d) {
  d.fx = d3.event.x;
  d.fy = d3.event.y;
}

function dragended(d) {
  if (!d3.event.active) simulation.alphaTarget(0);
  d.fx = null;
  d.fy = null;
}

</script>
</div>

{% endblock %}